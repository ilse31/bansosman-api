{
  "openapi": "3.0.0",
  "info": {
    "title": "Bansosman",
    "description": "This is a simple API for tracking a bansos(bantuan sosial)",
    "contact": {
      "email": "ilhamprazsetyo33@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/ilse31/bansosman/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "tags": [
    {
      "name": "apbn",
      "description": "Secured Admin-only calls"
    },
    {
      "name": "daerah",
      "description": "Operations available to regular developers"
    },
    {
      "name": "user",
      "description": "Operations available to regular developers"
    },
    {
      "name": "admin",
      "description": "Operations available to regular developers"
    }
  ],
  "paths": {
    "/apbn/all": {
      "get": {
        "tags": ["apbn"],
        "summary": "find all apbn",
        "description": "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "operationId": "searchInventory",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "pass an optional search string for looking up inventory",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "number of records to skip for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of records to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 50,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bansos"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/apbn/input": {
      "post": {
        "tags": ["apbn"],
        "summary": "adds an inventory item",
        "description": "Adds an item to the system",
        "operationId": "addInventory",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bansos"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/apbn/update/:id": {
      "put": {
        "tags": ["apbn"],
        "summary": "updated one an inventory item",
        "description": "updated one an item to the system",
        "operationId": "updated apbn",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bansos"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/apbn/:id": {
      "delete": {
        "tags": ["apbn"],
        "summary": "deleted an apbn",
        "description": "deleted an apbn",
        "operationId": "deleted apbn",
        "requestBody": {
          "description": "deleted apbn",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bansosdeleted"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      },
      "get": {
        "tags": ["apbn"],
        "summary": "get one an inventory item",
        "description": "get one an item to the system",
        "operationId": "get one",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bansos"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/daerah/find-ip": {
      "get": {
        "tags": ["daerah"],
        "summary": "find daerah from device user",
        "description": "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "operationId": "searchInventory",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "pass an optional search string for looking up inventory",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "number of records to skip for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of records to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 50,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Daerah"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/user/all": {
      "get": {
        "tags": ["user"],
        "summary": "find all apbn",
        "description": "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "operationId": "searchInventory",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "pass an optional search string for looking up inventory",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "number of records to skip for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of records to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 50,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/user/update/:id": {
      "put": {
        "tags": ["user"],
        "summary": "updated one an inventory item",
        "description": "updated one an item to the system",
        "operationId": "updated apbn",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/user/:id": {
      "delete": {
        "tags": ["user"],
        "summary": "deleted an apbn",
        "description": "deleted an apbn",
        "operationId": "deleted apbn",
        "requestBody": {
          "description": "deleted apbn",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bansosdeleted"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      },
      "get": {
        "tags": ["user"],
        "summary": "get one an inventory item",
        "description": "get one an item to the system",
        "operationId": "get one",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/daerah/all": {
      "get": {
        "tags": ["daerah"],
        "summary": "find all apbn",
        "description": "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "operationId": "searchInventory",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "pass an optional search string for looking up inventory",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "number of records to skip for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of records to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 50,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Daerah"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/daerah/input": {
      "post": {
        "tags": ["daerah"],
        "summary": "adds an inventory item",
        "description": "Adds an item to the system",
        "operationId": "addInventory",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Daerah"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/daerah/update/:id": {
      "put": {
        "tags": ["daerah"],
        "summary": "updated one an inventory item",
        "description": "updated one an item to the system",
        "operationId": "updated apbn",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Daerah"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/daerah/:id": {
      "delete": {
        "tags": ["daerah"],
        "summary": "deleted an apbn",
        "description": "deleted an apbn",
        "operationId": "deleted apbn",
        "requestBody": {
          "description": "deleted apbn",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bansosdeleted"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      },
      "get": {
        "tags": ["daerah"],
        "summary": "get one an inventory item",
        "description": "get one an item to the system",
        "operationId": "get one",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Daerah"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/admins/login": {
      "get": {
        "tags": ["admin"],
        "summary": "find all apbn",
        "description": "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "operationId": "searchInventory",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "pass an optional search string for looking up inventory",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "number of records to skip for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of records to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 50,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserToken"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": ["user"],
        "summary": "adds an inventory item",
        "description": "Adds an item to the system",
        "operationId": "addInventory",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": ["user"],
        "summary": "find all apbn",
        "description": "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
        "operationId": "searchInventory",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "pass an optional search string for looking up inventory",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "number of records to skip for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of records to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 50,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserToken"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/admins/register": {
      "post": {
        "tags": ["admin"],
        "summary": "adds an inventory item",
        "description": "Adds an item to the system",
        "operationId": "addInventory",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Daerah"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "Bansos": {
        "required": ["id", "dana_bansos", "created_at", "updated_at"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "uuid",
            "example": "1"
          },
          "dana_bansos": {
            "type": "integer",
            "format": "int",
            "example": "12000"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-08-29T09:12:33.001Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-08-29T09:12:33.001Z"
          }
        }
      },
      "Bansosdeleted": {
        "required": ["deleted"],
        "type": "object",
        "properties": {
          "deleted": {}
        }
      },
      "Daerah": {
        "required": [
          "id",
          "apbn_id",
          "apbn",
          "provinsi",
          "city",
          "created_at",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "uuid",
            "example": "1"
          },
          "apbn_id": {
            "type": "integer",
            "format": "int",
            "example": "1"
          },
          "apbn": {
            "type": "integer",
            "format": "int",
            "example": "12000"
          },
          "provinsi": {
            "type": "string",
            "format": "str",
            "example": "Jawa Tengah"
          },
          "city": {
            "type": "string",
            "format": "str",
            "example": "Semarang"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-08-29T09:12:33.001Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-08-29T09:12:33.001Z"
          }
        }
      },
      "User": {
        "required": [
          "id",
          "nik",
          "name",
          "email",
          "password",
          "gaji",
          "alamat",
          "created_at",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "uuid",
            "example": "1"
          },
          "nik": {
            "type": "integer",
            "format": "int",
            "example": "1"
          },
          "name": {
            "type": "string",
            "format": "int",
            "example": "ilham ganteng"
          },
          "email": {
            "type": "string",
            "format": "str",
            "example": "Jawa Tengah"
          },
          "password": {
            "type": "string",
            "format": "str",
            "example": "rsseaes3563drg"
          },
          "gaji": {
            "type": "integer",
            "format": "int",
            "example": "123413421"
          },
          "alamat": {
            "type": "string",
            "format": "str",
            "example": "rsseaes3563drg"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-08-29T09:12:33.001Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-08-29T09:12:33.001Z"
          }
        }
      },
      "UserToken": {
        "required": ["token"],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "format": "str",
            "example": "32453242sefsef235252534"
          }
        }
      }
    }
  }
}
